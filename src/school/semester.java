/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package school;

import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.EventQueue;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tharaka Rumesh Jee
 */
public class semester extends javax.swing.JInternalFrame {
    Connection con= null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    
    ArrayList name = new ArrayList();
    ArrayList names = new ArrayList();
    ArrayList name1 = new ArrayList();
    ArrayList names1 = new ArrayList();
    /**
     * Creates new form semester
     */
    public semester() {
        initComponents();
        con = db.connect();
        databaseNama();
        databaseNamas();
        databaseNama1();
        databaseNamas1();
        table();
        items();
        search.setEnabled(false);
        update.setVisible(false);
        add.setVisible(true);
        jButton1.setEnabled(false);
    }

     public void items(){
        TextAutoCompleter textAutocompleter = new TextAutoCompleter(txtsearch);
        
          String sq2 = "SELECT st_fullname FROM student_all";
            
        try{
            pst = con.prepareStatement(sq2);
            rs = pst.executeQuery();
                
            while(rs.next()){
//                String a1 = rs.getString("st_fullname");
//                String a2 = rs.getString("st_grade");
//                String a3 = rs.getString("st_class");
//                String a4 = a1 + " " + a2 + "-" + a3;
                textAutocompleter.addItem(rs.getString("st_fullname"));
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        fname = new javax.swing.JLabel();
        lname = new javax.swing.JLabel();
        grade = new javax.swing.JLabel();
        jclass = new javax.swing.JLabel();
        txtfname = new javax.swing.JTextField();
        txtlname = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        search = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        semnu = new javax.swing.JLabel();
        semma = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        txtmarks = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1073, 623));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        fname.setText("Index No");

        lname.setText("Grade");

        grade.setText("Class");

        jclass.setText("Last Name");

        txtfname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfnameKeyPressed(evt);
            }
        });

        txtlname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtlnameKeyPressed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "please select", "A", "B", "C" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "please select", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" }));

        jLabel2.setText("First Name");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(fname)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtfname, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                .addGap(85, 85, 85)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jclass))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addComponent(txtlname))
                .addGap(97, 97, 97)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(grade)
                        .addGap(22, 22, 22)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lname)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fname)
                    .addComponent(lname)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jclass)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtlname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grade)
                    .addComponent(jButton1))
                .addGap(10, 10, 10))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        search.setBackground(new java.awt.Color(0, 51, 51));
        search.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsearchKeyTyped(evt);
            }
        });

        jLabel3.setText("Name");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(11, 11, 11))
        );

        jLabel1.setBackground(new java.awt.Color(0, 51, 51));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 0));
        jLabel1.setText("Term Test Marks");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        semnu.setText("Term Test Number");

        semma.setText("Marks");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "please select", "1", "2", "3" }));

        txtmarks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmarksKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(semnu)
                .addGap(31, 31, 31)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(semma)
                .addGap(38, 38, 38)
                .addComponent(txtmarks, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(semnu)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(semma)
                    .addComponent(txtmarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        add.setBackground(new java.awt.Color(0, 51, 0));
        add.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("Save Marks");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(255, 153, 0));
        update.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update Marks");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(update))
                .addGap(11, 11, 11))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Index", "Middle Name", "Last Name", "Grade", "Class", "Term 1", "Term 2", "Term 3"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 262, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        try {
            
             Connection conn = db.connect();
               Statement s = conn.createStatement();
             
            rs = s.executeQuery("SELECT * FROM student_all WHERE st_fullname='" + txtsearch.getText() + "'");
            while (rs.next()) {

                txtfname.setText(rs.getString("st_fname"));
                jTextField1.setText(rs.getString("st_mname"));
                txtlname.setText(rs.getString("st_lname"));
                jComboBox2.setSelectedItem(rs.getString("st_grade"));
                jComboBox1.setSelectedItem(rs.getString("st_class"));
                
         }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
        }        
                
    }//GEN-LAST:event_searchActionPerformed

    
    public void table() {

        DefaultTableModel dtf = (DefaultTableModel) jTable3.getModel();
        dtf.setRowCount(0);

        try {
                Connection conn = db.connect();
                Statement s = conn.createStatement();
            
            rs=s.executeQuery("SELECT * FROM student_all ORDER BY st_grade,st_class,st_fname,st_mname,st_lname,st_se_marks1,st_se_marks2,st_se_marks3 ASC");

            while (rs.next()) {

                Vector v = new Vector();

                v.add(rs.getString("st_fname"));
                v.add(rs.getString("st_mname"));
                v.add(rs.getString("st_lname"));
                v.add(rs.getString("st_grade"));
                v.add(rs.getString("st_class"));
                v.add(rs.getString("st_se_marks1"));
                v.add(rs.getString("st_se_marks2"));
                v.add(rs.getString("st_se_marks3"));
                
                dtf.addRow(v);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Table load Fail");
        }
    }
    
    public void reset() {
        txtfname.setText("");
        txtlname.setText("");
        jTextField1.setText("");
        txtsearch.setText("");
        txtmarks.setText("");
        jComboBox3.setSelectedIndex(0);
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);      
    }
    
    
    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
         if(jComboBox1.getSelectedItem()=="please select" || jComboBox2.getSelectedItem()=="please select" || jComboBox3.getSelectedItem()=="please select") {
           JOptionPane.showMessageDialog(null, "please enter or select correct values");
       }

         else { 
        
        if(jComboBox3.getSelectedItem()=="1"){
         try {
                 
                String sql = "UPDATE student_all set st_se_1='" + jComboBox3.getSelectedItem() + "',st_se_marks1='" + txtmarks.getText() + "' WHERE st_fullname='" + txtsearch.getText() + "' AND st_grade = '"+jComboBox2.getSelectedItem()+"' AND st_class = '"+jComboBox1.getSelectedItem()+"' ";
                pst = con.prepareStatement(sql);
                pst.execute();
                
                JOptionPane.showMessageDialog(null, "Added Successfully");
              
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Adding Failed");
            }
        }

        else if(jComboBox3.getSelectedItem()=="2"){
          try {
                 
                String sql = "UPDATE student_all set st_se_2='" + jComboBox3.getSelectedItem() + "',st_se_marks2='" + txtmarks.getText() + "' WHERE st_fullname='" + txtsearch.getText() + "' AND st_grade = '"+jComboBox2.getSelectedItem()+"' AND st_class = '"+jComboBox1.getSelectedItem()+"' ";
                pst = con.prepareStatement(sql);
                pst.execute();
                
                JOptionPane.showMessageDialog(null, "Added Successfully");
              
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Adding Failed");
            }
        }
        
        else if(jComboBox3.getSelectedItem()=="3"){
          try {
                 
                String sql = "UPDATE student_all set st_se_3='" + jComboBox3.getSelectedItem() + "',st_se_marks3='" + txtmarks.getText() + "' WHERE st_fullname='" + txtsearch.getText() + "' AND st_grade = '"+jComboBox2.getSelectedItem()+"' AND st_class = '"+jComboBox1.getSelectedItem()+"' ";
                pst = con.prepareStatement(sql);
                pst.execute();
                
                JOptionPane.showMessageDialog(null, "Added Successfully");
              
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Adding Failed");
            }
        }
          table();
        databaseNama();
        databaseNamas();
        databaseNama1();
        databaseNamas1();
         reset();
         }
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
         if(jComboBox1.getSelectedItem()=="please select" || jComboBox2.getSelectedItem()=="please select" || jComboBox3.getSelectedItem()=="please select") {
           JOptionPane.showMessageDialog(null, "please enter or select correct values");
       }

         else {

        if(jComboBox3.getSelectedItem()=="1"){
         try {
                 
                String sql = "UPDATE student_all set st_se_1='" + jComboBox3.getSelectedItem() + "',st_se_marks1='" + txtmarks.getText() + "' WHERE st_fullname='" + txtsearch.getText() + "' AND st_grade = '"+jComboBox2.getSelectedItem()+"' AND st_class = '"+jComboBox1.getSelectedItem()+"' ";
                pst = con.prepareStatement(sql);
                pst.execute();
                
                JOptionPane.showMessageDialog(null, "Added Successfully");
              
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Adding Failed");
            }
        }

        else if(jComboBox3.getSelectedItem()=="2"){
          try {
                 
                String sql = "UPDATE student_all set st_se_2='" + jComboBox3.getSelectedItem() + "',st_se_marks2='" + txtmarks.getText() + "' WHERE st_fullname='" + txtsearch.getText() + "' AND st_grade = '"+jComboBox2.getSelectedItem()+"' AND st_class = '"+jComboBox1.getSelectedItem()+"' ";
                pst = con.prepareStatement(sql);
                pst.execute();
                
                JOptionPane.showMessageDialog(null, "Added Successfully");
              
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Adding Failed");
            }
        }
        
        else if(jComboBox3.getSelectedItem()=="3"){
          try {
                 
                String sql = "UPDATE student_all set st_se_3='" + jComboBox3.getSelectedItem() + "',st_se_marks3='" + txtmarks.getText() + "' WHERE st_fullname='" + txtsearch.getText() + "' AND st_grade = '"+jComboBox2.getSelectedItem()+"' AND st_class = '"+jComboBox1.getSelectedItem()+"' ";
                pst = con.prepareStatement(sql);
                pst.execute();
                
                JOptionPane.showMessageDialog(null, "Added Successfully");
              
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Adding Failed");
            }
        }
         table();
        databaseNama();
        databaseNamas();
        databaseNama1();
        databaseNamas1();
         reset();
         }
    }//GEN-LAST:event_updateActionPerformed

    private void txtsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyPressed
       switch(evt.getKeyCode()) {
            case KeyEvent.VK_BACK_SPACE:
            search.setEnabled(false);
            update.setVisible(false);
            add.setVisible(true);
            jButton1.setEnabled(false);
            txtfname.setText("");
            txtlname.setText("");
            jTextField1.setText("");
            txtsearch.setText("");
            txtmarks.setText("");
            jComboBox3.setSelectedIndex(0);
            jComboBox1.setSelectedIndex(0);
            jComboBox2.setSelectedIndex(0);      
            break;
            case KeyEvent.VK_ENTER:
            txtsearch.setText(txtsearch.getText());
            search.setEnabled(true);
            update.setVisible(true);
            add.setVisible(false);
            jButton1.setEnabled(false);
            
            try {
            
             Connection conn = db.connect();
               Statement s = conn.createStatement();
             
            rs = s.executeQuery("SELECT * FROM student_all WHERE st_fullname='" + txtsearch.getText() + "'");
            while (rs.next()) {

                txtfname.setText(rs.getString("st_fname"));
                jTextField1.setText(rs.getString("st_mname"));
                txtlname.setText(rs.getString("st_lname"));
                jComboBox2.setSelectedItem(rs.getString("st_grade"));
                jComboBox1.setSelectedItem(rs.getString("st_class"));
                
         }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
        }        
                
            break;
            default:
            EventQueue.invokeLater(new Runnable(){
                @Override

            
            public void run() {
            String txt = txtsearch.getText();
            autoComplete(txt);
            }
            });
        }
    }//GEN-LAST:event_txtsearchKeyPressed

    private void txtfnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfnameKeyPressed
       switch(evt.getKeyCode()) {
            case KeyEvent.VK_BACK_SPACE:
            search.setEnabled(false);
            update.setVisible(false);
            add.setVisible(true);
            jButton1.setEnabled(false);
            txtfname.setText("");
            txtlname.setText("");
            jTextField1.setText("");
            txtsearch.setText("");
            txtmarks.setText("");
            jComboBox3.setSelectedIndex(0);
            jComboBox1.setSelectedIndex(0);
            jComboBox2.setSelectedIndex(0);
            
            break;
            case KeyEvent.VK_ENTER:
            txtfname.setText(txtfname.getText());
            search.setEnabled(false);
            update.setVisible(true);
            add.setVisible(false);
            jButton1.setEnabled(true);
            
            try {
            
             Connection conn = db.connect();
               Statement s = conn.createStatement();
             
            rs = s.executeQuery("SELECT * FROM student_all WHERE st_fname='" + txtfname.getText() + "'");
            while (rs.next()) {

                jTextField1.setText(rs.getString("st_mname"));
                txtlname.setText(rs.getString("st_lname"));
                jComboBox2.setSelectedItem(rs.getString("st_grade"));
                jComboBox1.setSelectedItem(rs.getString("st_class"));
                
         }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
        }        
            break;
                    }
       

    }//GEN-LAST:event_txtfnameKeyPressed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        switch(evt.getKeyCode()) {
            case KeyEvent.VK_BACK_SPACE:
            break;
            case KeyEvent.VK_ENTER:
            jTextField1.setText(jTextField1.getText());
            break;
            default:
            EventQueue.invokeLater(new Runnable(){
                @Override

            
            public void run() {
            String txt = jTextField1.getText();
            autoComplete1(txt);
            }
            });
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void txtlnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlnameKeyPressed
        switch(evt.getKeyCode()) {
            case KeyEvent.VK_BACK_SPACE:
            break;
            case KeyEvent.VK_ENTER:
            txtlname.setText(txtlname.getText());
            break;
            default:
            EventQueue.invokeLater(new Runnable(){
                @Override

            
            public void run() {
            String txt = txtlname.getText();
            autoCompletes1(txt);
            }
            });
        }
    }//GEN-LAST:event_txtlnameKeyPressed

    private void txtmarksKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmarksKeyTyped
         char vchar = evt.getKeyChar();
        if(!(Character.isDigit(vchar))||(vchar == KeyEvent.VK_BACK_SPACE)||(vchar == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
       search.setVisible(true);
       update.setVisible(true);
       add.setVisible(true);
    }//GEN-LAST:event_txtmarksKeyTyped

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked

        search.setVisible(true);
       update.setVisible(true);
       add.setVisible(false);
        
        try {
            int row = jTable3.getSelectedRow();
            String Table_click = (jTable3.getModel().getValueAt(row,0).toString());
            String SQL = "SELECT * FROM student_all WHERE st_fname='" + Table_click + "'";
            pst = con.prepareStatement(SQL);
            rs = pst.executeQuery();
            while (rs.next()) {

                txtfname.setText(rs.getString("st_fname"));
                jTextField1.setText(rs.getString("st_mname"));
                txtlname.setText(rs.getString("st_lname"));
                jComboBox2.setSelectedItem(rs.getString("st_grade"));
                jComboBox1.setSelectedItem(rs.getString("st_class"));
                txtsearch.setText(rs.getString("st_fullname"));
                
         }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
        }        
                
    }//GEN-LAST:event_jTable3MouseClicked

    private void txtsearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyTyped

    }//GEN-LAST:event_txtsearchKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try {
            
             Connection conn = db.connect();
               Statement s = conn.createStatement();
             
            rs = s.executeQuery("SELECT * FROM student_all WHERE st_fname='" + txtfname.getText() + "'");
            while (rs.next()) {

                jTextField1.setText(rs.getString("st_mname"));
                txtlname.setText(rs.getString("st_lname"));
                jComboBox2.setSelectedItem(rs.getString("st_grade"));
                jComboBox1.setSelectedItem(rs.getString("st_class"));
                
         }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
        }        
                
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JLabel fname;
    private javax.swing.JLabel grade;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jclass;
    private javax.swing.JLabel lname;
    private javax.swing.JButton search;
    private javax.swing.JLabel semma;
    private javax.swing.JLabel semnu;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtlname;
    private javax.swing.JTextField txtmarks;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
private void databaseNama() {
        try {
           Connection conn = db.connect();
           Statement s = conn.createStatement();
           
           String sql = "SELECT * FROM student_all ORDER BY st_fullname ASC";
           rs = s.executeQuery(sql);
           while(rs.next()) {
               String Name = rs.getString("st_fullname");
               name.add(Name);
           }
           
           rs.close();
           s.close();
           conn.close();
           
        } catch (Exception e) {
            
        }
    }
    
    public void autoComplete (String txt) {
        String complete = "";
        int start = txt.length();
        int last = txt.length();
        int a;
        for (a=0; a<name.size(); a++) {
            if(name.get(a).toString().startsWith(txt)) {
              complete = name.get(a).toString();
              last = complete.length();
              break;
            }
        }
        if(last>start) {
            txtsearch.setText(complete);
            txtsearch.setCaretPosition(last);
            txtsearch.moveCaretPosition(start);
        }
    }
    // -------------
    
    private void databaseNamas() {
        try {
           Connection conn = db.connect();
           Statement s = conn.createStatement();
           
           String sql = "SELECT * FROM student_all ORDER BY st_fname ASC";
           rs = s.executeQuery(sql);
           while(rs.next()) {
               String Name = rs.getString("st_fname");
               names.add(Name);
           }
           
           rs.close();
           s.close();
           conn.close();
           
        } catch (Exception e) {
            
        }
    }
    
    public void autoCompletes (String txt) {
        String complete = "";
        int start = txt.length();
        int last = txt.length();
        int a;
        for (a=0; a<names.size(); a++) {
            if(names.get(a).toString().startsWith(txt)) {
              complete = names.get(a).toString();
              last = complete.length();
              break;
            }
        }
        if(last>start) {
            txtfname.setText(complete);
            txtfname.setCaretPosition(last);
            txtfname.moveCaretPosition(start);
        }
    }
    
    // -------------
    
    private void databaseNama1() {
        try {
           Connection conn = db.connect();
           Statement s = conn.createStatement();
           
           String sql = "SELECT * FROM student_all";
           rs = s.executeQuery(sql);
           while(rs.next()) {
               String Name = rs.getString("st_mname");
               name1.add(Name);
           }
           
           rs.close();
           s.close();
           conn.close();
           
        } catch (Exception e) {
            
        }
    }
    
    public void autoComplete1 (String txt) {
        String complete = "";
        int start = txt.length();
        int last = txt.length();
        int a;
        for (a=0; a<name1.size(); a++) {
            if(name1.get(a).toString().startsWith(txt)) {
              complete = name1.get(a).toString();
              last = complete.length();
              break;
            }
        }
        if(last>start) {
            jTextField1.setText(complete);
            jTextField1.setCaretPosition(last);
            jTextField1.moveCaretPosition(start);
        }
    }
    
     // -------------
    
    private void databaseNamas1() {
        try {
           Connection conn = db.connect();
           Statement s = conn.createStatement();
           
           String sql = "SELECT * FROM student_all";
           rs = s.executeQuery(sql);
           while(rs.next()) {
               String Name = rs.getString("st_lname");
               names1.add(Name);
           }
           
           rs.close();
           s.close();
           conn.close();
           
        } catch (Exception e) {
            
        }
    }
    
    public void autoCompletes1 (String txt) {
        String complete = "";
        int start = txt.length();
        int last = txt.length();
        int a;
        for (a=0; a<names1.size(); a++) {
            if(names1.get(a).toString().startsWith(txt)) {
              complete = names1.get(a).toString();
              last = complete.length();
              break;
            }
        }
        if(last>start) {
            txtlname.setText(complete);
            txtlname.setCaretPosition(last);
            txtlname.moveCaretPosition(start);
        }
    }
    
    
}
