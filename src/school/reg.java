/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package school;

import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Tharaka Rumesh Jee
 */
public class reg extends javax.swing.JInternalFrame {
    Connection con= null;
    ResultSet rs=null;
    PreparedStatement pst=null;
//    DefaultTableModel mode;
    ArrayList name = new ArrayList();
   
    public reg() {
        initComponents();
        con = db.connect(); 
        databaseNama();
        table();
        items();
        update.setVisible(false);
        delete.setVisible(false);
        search.setEnabled(false);
        jButton2.setEnabled(false);
    }
    
     public void items(){
        TextAutoCompleter textAutocompleter = new TextAutoCompleter(txtsearch);
        
        String sq2 = "SELECT st_fullname FROM student_all";
            
        try{
            pst = con.prepareStatement(sq2);
            rs = pst.executeQuery();
                
            while(rs.next()){
//                String a1 = rs.getString("st_fullname");
//                String a2 = rs.getString("st_grade");
//                String a3 = rs.getString("st_class");
//                String a4 = a1 + " " + a2 + "-" + a3;
                textAutocompleter.addItem(rs.getString("st_fullname"));
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtfname = new javax.swing.JTextField();
        fname = new javax.swing.JLabel();
        txtlname = new javax.swing.JTextField();
        lname = new javax.swing.JLabel();
        cmbgrade = new javax.swing.JComboBox<>();
        cmbclass = new javax.swing.JComboBox<>();
        cmbgender = new javax.swing.JComboBox<>();
        grade = new javax.swing.JLabel();
        jclass = new javax.swing.JLabel();
        gender = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        txtsearch = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1073, 597));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.lightGray));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        txtfname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfnameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfnameKeyTyped(evt);
            }
        });

        fname.setText("Index No");

        txtlname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlnameActionPerformed(evt);
            }
        });
        txtlname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtlnameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtlnameKeyTyped(evt);
            }
        });

        lname.setText("First Name");

        cmbgrade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "please select", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" }));

        cmbclass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "please select", "A", "B", "C" }));

        cmbgender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        grade.setText("Grade");

        jclass.setText("Class");

        gender.setText("Gender");

        jLabel3.setText("Last  Name");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 51, 51));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 0));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fname)
                    .addComponent(lname)
                    .addComponent(jLabel3))
                .addGap(92, 92, 92)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtlname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(txtfname, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(104, 104, 104)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(grade)
                    .addComponent(jclass)
                    .addComponent(gender))
                .addGap(99, 99, 99)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbgrade, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbclass, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbgender, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fname)
                    .addComponent(cmbgrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grade)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtlname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lname)
                    .addComponent(cmbclass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jclass)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gender)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(21, 21, 21))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        add.setBackground(new java.awt.Color(0, 51, 0));
        add.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("Save Details");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(255, 153, 0));
        update.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update Details");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(153, 0, 0));
        delete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete Details");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(delete)
                    .addComponent(update))
                .addGap(11, 11, 11))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));
        jPanel5.setMaximumSize(new java.awt.Dimension(393, 49));
        jPanel5.setMinimumSize(new java.awt.Dimension(393, 49));

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsearchKeyTyped(evt);
            }
        });

        search.setBackground(new java.awt.Color(0, 51, 51));
        search.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search)
                    .addComponent(jLabel2))
                .addGap(11, 11, 11))
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("Student Registration");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Index No", "First Name", "Last Name", "Gender", "Grade", "Class"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(273, 273, 273)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

                  // Fname validations
        String name1 = txtlname.getText();
        int count_Fname = 0;
        boolean Fname = false;

        if (name1.length() == 0) {
            txtlname.setBackground(Color.gray);
            jLabel4.setText("Enter First Name");
        }
        
        for (int i = 0; i < name1.length(); i++) {
            if (Character.isLetter(name1.charAt(i))) {
                count_Fname++;
            }
        }
        if (count_Fname == name1.length()) {
            Fname = true;
            System.out.println("error in true");
        } else {
    //         jTextField1.setCaretColor(Color.red); // cursor
    //         jTextField1.setBackground(Color.red); // background
               txtlname.setForeground(Color.red); // foreground
               jLabel4.setText("Enter Valid Name");
        }

        // end of Fname validations
        
                // Lname validations
        String name2 = jTextField1.getText();
        int count_Lname = 0;
        boolean Lname = false;

        if (name2.length() == 0) {
            jTextField1.setBackground(Color.gray);
            jLabel5.setText("Enter Last Name");
        }
        
        for (int i = 0; i < name2.length(); i++) {
            if (Character.isLetter(name2.charAt(i))) {
                count_Lname++;
            }
        }
        if (count_Lname == name2.length()) {
            Lname = true;
            System.out.println("error in true");
        } else {
    //         jTextField1.setCaretColor(Color.red); // cursor
    //         jTextField1.setBackground(Color.red); // background
               jTextField1.setForeground(Color.red); // foreground
               jLabel5.setText("Enter Valid Name");
        }

        // end of Lname validations
        
        if(Fname == true && name1.length() != 0 && Lname == true && name2.length() != 0){
        
        String fullname = txtlname.getText() + " " + jTextField1.getText();
  
       if(cmbgrade.getSelectedItem()=="please select" || cmbclass.getSelectedItem()=="please select") {
           JOptionPane.showMessageDialog(null, "please select correct values");
       }
        
       else {
        try {
                String sql1 = "INSERT INTO student_all(st_fname,st_mname,st_lname,st_fullname,st_gender,st_grade,st_class) VALUES('" + txtfname.getText() + "','" + txtlname.getText() + "','" + jTextField1.getText() + "','" + fullname + "','" + cmbgender.getSelectedItem() +"','" + cmbgrade.getSelectedItem() +"','" + cmbclass.getSelectedItem() +"' )";            
                pst = con.prepareStatement(sql1);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Data Saved Successfully");
           
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Data save Failed");
            }     
       
        try {
             
                String sql = "INSERT INTO student_class(stu_fname,stu_mname,stu_lname,stu_gender,stu_grade,stu_class) VALUES('" + txtfname.getText() + "','" + txtlname.getText() + "','" + jTextField1.getText() + "','" + cmbgender.getSelectedItem() +"','" + cmbgrade.getSelectedItem() +"','" + cmbclass.getSelectedItem() +"' )";            
                pst = con.prepareStatement(sql);
                pst.execute();
               
           
            } catch (Exception e) {
               
            }  
        table();
        databaseNama();
        reset();
       }
    }//GEN-LAST:event_addActionPerformed
    }
    public void table() {

        DefaultTableModel dtf = (DefaultTableModel) jTable1.getModel();
        dtf.setRowCount(0);

        try {
                Connection conn = db.connect();
                Statement s = conn.createStatement();
            
            rs=s.executeQuery("SELECT * FROM student_class ORDER BY stu_grade,stu_class,stu_fname,stu_mname,stu_lname,stu_gender ASC");

            while (rs.next()) {

                Vector v = new Vector();

                v.add(rs.getString("stu_fname"));
                v.add(rs.getString("stu_mname"));
                v.add(rs.getString("stu_lname"));
                v.add(rs.getString("stu_gender"));
                v.add(rs.getString("stu_grade"));
                v.add(rs.getString("stu_class"));
                
                dtf.addRow(v);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Table load Fail");
        }
    }
    
    public void reset() {
        txtfname.setText("");
        txtlname.setText("");
        jTextField1.setText("");
        txtsearch.setText("");
        cmbgender.setSelectedIndex(0);
        cmbgrade.setSelectedIndex(0);
        cmbclass.setSelectedIndex(0); 
        txtlname.setBackground(Color.WHITE);
        jTextField1.setBackground(Color.WHITE);
    }
    
    
    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed

          txtfname.setEnabled(false);
        try {
            
             Connection conn = db.connect();
               Statement s = conn.createStatement();
             
            rs = s.executeQuery("SELECT * FROM student_all WHERE st_fullname='" + txtsearch.getText() + "'");
            while (rs.next()) {

                txtfname.setText(rs.getString("st_fname"));
                txtlname.setText(rs.getString("st_mname"));
                jTextField1.setText(rs.getString("st_lname"));
                cmbgrade.setSelectedItem(rs.getString("st_grade"));
                cmbclass.setSelectedItem(rs.getString("st_class"));
                cmbgender.setSelectedItem(rs.getString("st_gender"));
         }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
        }        
                
    }//GEN-LAST:event_searchActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed

        
         // Fname validations
        String name1 = txtlname.getText();
        int count_Fname = 0;
        boolean Fname = false;

        if (name1.length() == 0) {
            txtlname.setBackground(Color.gray);
            jLabel4.setText("Enter First Name");
        }
        
        for (int i = 0; i < name1.length(); i++) {
            if (Character.isLetter(name1.charAt(i))) {
                count_Fname++;
            }
        }
        if (count_Fname == name1.length()) {
            Fname = true;
            System.out.println("error in true");
        } else {
    //         jTextField1.setCaretColor(Color.red); // cursor
    //         jTextField1.setBackground(Color.red); // background
               txtlname.setForeground(Color.red); // foreground
               jLabel4.setText("Enter Valid Name");
        }

        // end of Fname validations
        
                // Lname validations
        String name2 = jTextField1.getText();
        int count_Lname = 0;
        boolean Lname = false;

        if (name2.length() == 0) {
            jTextField1.setBackground(Color.gray);
            jLabel5.setText("Enter First Name");
        }
        
        for (int i = 0; i < name2.length(); i++) {
            if (Character.isLetter(name2.charAt(i))) {
                count_Lname++;
            }
        }
        if (count_Lname == name2.length()) {
            Lname = true;
            System.out.println("error in true");
        } else {
    //         jTextField1.setCaretColor(Color.red); // cursor
    //         jTextField1.setBackground(Color.red); // background
               jTextField1.setForeground(Color.red); // foreground
               jLabel5.setText("Enter Valid Name");
        }

        // end of Lname validations
        
if(Fname == true && name1.length() != 0 && Lname == true && name2.length() != 0){
        
         if(cmbgrade.getSelectedItem()=="please select" || cmbclass.getSelectedItem()=="please select") {
           JOptionPane.showMessageDialog(null, "please select correct values");
       }
         
         else {
        try {
                 
                String sql = "UPDATE student_class set stu_grade='" + cmbgrade.getSelectedItem() + "',stu_class='" + cmbclass.getSelectedItem() + "',stu_gender='" + cmbgender.getSelectedItem() + "',stu_mname= '"+txtlname.getText()+"',stu_lname= '"+jTextField1.getText()+  "' WHERE stu_fname='" + txtfname.getText() +"' ";
                pst = con.prepareStatement(sql);
                pst.execute();
                
               
              
            } catch (Exception e) {
               
            }
         
          try {
                 
                String sql1 = "UPDATE student_all set st_grade='" + cmbgrade.getSelectedItem() + "',st_class='" + cmbclass.getSelectedItem() + "',st_gender='" + cmbgender.getSelectedItem() + "' WHERE st_fname='" + txtfname.getText() + "' AND st_mname = '"+txtlname.getText()+"' AND st_lname = '"+jTextField1.getText()+"' ";
                pst = con.prepareStatement(sql1);
                pst.execute();
                
                JOptionPane.showMessageDialog(null, "Added Successfully");
          
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Adding Failed");
            }
                table();
                databaseNama();
                reset();
         }
}
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
       
        try {
                 
                String sql = "DELETE FROM student_class WHERE stu_fname='"+txtfname.getText()+"'AND stu_mname='"+txtlname.getText()+"'AND stu_lname='"+jTextField1.getText()+"'";
                pst = con.prepareStatement(sql);
                pst.execute();
                
               
            } catch (Exception e) {
                
            }
        databaseNama();
         
         try {
                 
                String sql1 = "DELETE FROM student_all WHERE st_fname='"+txtfname.getText()+"'AND st_mname='"+txtlname.getText()+"'AND st_lname='"+jTextField1.getText()+"'";
                pst = con.prepareStatement(sql1);
                pst.execute();
                
                JOptionPane.showMessageDialog(null, "Deleted Successfully");
          
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Deleted Failed");
            }
         table();
         databaseNama();
         reset();
    }//GEN-LAST:event_deleteActionPerformed

    private void txtsearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyTyped
//            search.setVisible(true);
//            delete.setVisible(true);
//            update.setVisible(true);
//            add.setVisible(false);
//            jButton1.setVisible(true);
    }//GEN-LAST:event_txtsearchKeyTyped

    private void txtsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyPressed
        switch(evt.getKeyCode()) {
            case KeyEvent.VK_BACK_SPACE:
            update.setVisible(false);
            delete.setVisible(false);
            search.setEnabled(false);
            add.setVisible(true);
            txtfname.setText("");
            txtlname.setText("");
            jTextField1.setText("");
            cmbgender.setSelectedIndex(0);
            cmbgrade.setSelectedIndex(0);
            cmbclass.setSelectedIndex(0); 
            txtsearch.setText("");
            break;
            case KeyEvent.VK_ENTER:
            txtsearch.setText(txtsearch.getText());
            search.setEnabled(true);
            delete.setVisible(true);
            update.setVisible(true);
            add.setVisible(false);
            
             try {
            
             Connection conn = db.connect();
               Statement s = conn.createStatement();
             
            rs = s.executeQuery("SELECT * FROM student_all WHERE st_fullname='" + txtsearch.getText() + "'");
            while (rs.next()) {

                txtfname.setText(rs.getString("st_fname"));
                txtlname.setText(rs.getString("st_mname"));
                jTextField1.setText(rs.getString("st_lname"));
                cmbgrade.setSelectedItem(rs.getString("st_grade"));
                cmbclass.setSelectedItem(rs.getString("st_class"));
                cmbgender.setSelectedItem(rs.getString("st_gender"));
         }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
        }        
                
            break;
            default:
            EventQueue.invokeLater(new Runnable(){
                @Override

            
            public void run() {
            String txt = txtsearch.getText();
            autoComplete(txt);
            }
            });
        }
        
    }//GEN-LAST:event_txtsearchKeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

            search.setEnabled(true);
            delete.setVisible(true);
            update.setVisible(true);

            add.setVisible(false);
        try {
            int row = jTable1.getSelectedRow();
            String Table_click = (jTable1.getModel().getValueAt(row,0).toString());
            String SQL = "SELECT * FROM student_all WHERE st_fname='" + Table_click + "'";
            pst = con.prepareStatement(SQL);
            rs = pst.executeQuery();
            if(rs.next()) {
                txtfname.setText(rs.getString("st_fname"));
                txtlname.setText(rs.getString("st_mname"));
                jTextField1.setText(rs.getString("st_lname"));
                cmbgrade.setSelectedItem(rs.getString("st_grade"));
                cmbclass.setSelectedItem(rs.getString("st_class"));
                cmbgender.setSelectedItem(rs.getString("st_gender"));
                txtsearch.setText(rs.getString("st_fullname"));

            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Sorry cannot Load Data");
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtfnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfnameKeyTyped
       char vchar = evt.getKeyChar();
        if(!(Character.isDigit(vchar))||(vchar == KeyEvent.VK_BACK_SPACE)||(vchar == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtfnameKeyTyped

    private void txtlnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlnameKeyTyped
//             update.setVisible(false);
//         delete.setVisible(false);
//          search.setVisible(false);
//           add.setVisible(true);
//           txtsearch.setText("");
    }//GEN-LAST:event_txtlnameKeyTyped

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
//             update.setVisible(false);
//         delete.setVisible(false);
//          search.setVisible(false);
//           add.setVisible(true);
//           txtsearch.setText("");
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            
             Connection conn = db.connect();
               Statement s = conn.createStatement();
             
            rs = s.executeQuery("SELECT * FROM student_all WHERE st_fname='" + txtfname.getText() + "'");
            while (rs.next()) {

                txtlname.setText(rs.getString("st_mname"));
                jTextField1.setText(rs.getString("st_lname"));
                cmbgrade.setSelectedItem(rs.getString("st_grade"));
                cmbclass.setSelectedItem(rs.getString("st_class"));
                cmbgender.setSelectedItem(rs.getString("st_gender"));
         }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Index No");
            
        }        
                        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtfnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfnameKeyReleased

    }//GEN-LAST:event_txtfnameKeyReleased

//    private void remove(){
//       while(jTable1.getRowCount()>0){
//           mode.removeRow(0);
//       }
//    }
//    
    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
         

    }//GEN-LAST:event_txtsearchKeyReleased

    private void txtfnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfnameKeyPressed
            switch(evt.getKeyCode()) {
            case KeyEvent.VK_BACK_SPACE:
            update.setVisible(false);
            delete.setVisible(false);
            jButton2.setEnabled(false);
            add.setVisible(true);
            txtfname.setText("");
            txtlname.setText("");
            jTextField1.setText("");
            cmbgender.setSelectedIndex(0);
            cmbgrade.setSelectedIndex(0);
            cmbclass.setSelectedIndex(0); 
            txtsearch.setText("");
            txtfname.setText("");
            break;
            case KeyEvent.VK_ENTER:
            txtfname.setText(txtfname.getText());
            jButton2.setEnabled(true);
            delete.setVisible(true);
            update.setVisible(true);
            add.setVisible(false);
            
             try {
            
             Connection conn = db.connect();
               Statement s = conn.createStatement();
             
            rs = s.executeQuery("SELECT * FROM student_all WHERE st_fname='" + txtfname.getText() + "'");
            while (rs.next()) {

                txtlname.setText(rs.getString("st_mname"));
                jTextField1.setText(rs.getString("st_lname"));
                cmbgrade.setSelectedItem(rs.getString("st_grade"));
                cmbclass.setSelectedItem(rs.getString("st_class"));
                cmbgender.setSelectedItem(rs.getString("st_gender"));
         }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
        }        
                
            break;
                    }
       
    }//GEN-LAST:event_txtfnameKeyPressed

    private void txtlnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtlnameKeyPressed
        txtlname.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtlnameKeyPressed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        jTextField1.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTextField1KeyPressed

    private void txtlnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlnameActionPerformed
        // txtlname.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtlnameActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
       // jTextField1.setBackground(Color.WHITE);
    }//GEN-LAST:event_jTextField1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JComboBox<String> cmbclass;
    private javax.swing.JComboBox<String> cmbgender;
    private javax.swing.JComboBox<String> cmbgrade;
    private javax.swing.JButton delete;
    private javax.swing.JLabel fname;
    private javax.swing.JLabel gender;
    private javax.swing.JLabel grade;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jclass;
    private javax.swing.JLabel lname;
    private javax.swing.JButton search;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtlname;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void databaseNama() {
        try {
           Connection conn = db.connect();
           Statement s = conn.createStatement();
           
           String sql = "SELECT * FROM student_all ORDER BY st_fullname ASC";
           rs = s.executeQuery(sql);
           while(rs.next()) {
               String Name = rs.getString("st_fullname");
               name.add(Name);
           }
           
           rs.close();
           s.close();
           conn.close();
           
        } catch (Exception e) {
            
        }
    }
    
    public void autoComplete (String txt) {
        String complete = "";
        int start = txt.length();
        int last = txt.length();
        int a;
        for (a=0; a<name.size(); a++) {
            if(name.get(a).toString().startsWith(txt)) {
              complete = name.get(a).toString();
              last = complete.length();
              break;
            }
        }
        if(last>start) {
            txtsearch.setText(complete);
            txtsearch.setCaretPosition(last);
            txtsearch.moveCaretPosition(start);
        }
    }

    private void ReadData(String string) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
}
