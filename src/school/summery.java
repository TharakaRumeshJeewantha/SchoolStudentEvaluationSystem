/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package school;

import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Tharaka Rumesh Jee
 */
public class summery extends javax.swing.JInternalFrame {
    Connection con= null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    /**
     * Creates new form summery
     */
    public summery() {
        initComponents();
        con = db.connect(); 
        jButton2.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1072, 594));
        setPreferredSize(new java.awt.Dimension(1073, 594));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        jLabel1.setBackground(new java.awt.Color(0, 51, 51));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("Records Summery");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        jLabel2.setText("Number of Students");

        jLabel5.setText("Assessment 01  Marks");

        jLabel6.setText("Assessment 02  Marks");

        jLabel7.setText("Assessment 03  Marks");

        jLabel8.setText("Assessment 04  Marks");

        jLabel9.setText("Assessment 05  Marks");

        jLabel10.setText("Assessment 06  Marks");

        jLabel11.setText("Overall Assessment Marks");

        jLabel12.setText("Overall Assessment Average");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 0));
        jLabel13.setPreferredSize(new java.awt.Dimension(48, 14));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 0, 0));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel21))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel20))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel19))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel17))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel16))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel15))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        jLabel3.setText("Grade");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "please select", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });

        jLabel4.setText("Class");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "please select", "A", "B", "C" }));
        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox2MouseClicked(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(11, 11, 11))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        jLabel22.setText("Term Test 01 Marks");

        jLabel23.setText("Term Test 02 Marks");

        jLabel24.setText("Term Test 03 Marks");

        jLabel25.setText("Overall Term Test Marks");

        jLabel26.setText("Overall TermTest Average");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(204, 0, 0));
        jLabel27.setPreferredSize(new java.awt.Dimension(48, 14));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(204, 0, 0));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(jLabel25)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(jLabel30)
                    .addComponent(jLabel29)
                    .addComponent(jLabel28)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel31))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel30))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel29))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel28))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jButton2.setBackground(new java.awt.Color(0, 51, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("View Term Test Graph");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jButton2)
                .addGap(1, 1, 1))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));

        jLabel32.setText("Assessment 01 Average");

        jLabel33.setText("Assessment 02 Average");

        jLabel34.setText("Assessment 03 Average");

        jLabel35.setText("Assessment 04 Average");

        jLabel36.setText("Assessment 05 Average");

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel42.setText("Assessment 06 Average");

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel44.setText("Term Test 01 Average");

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(204, 0, 0));
        jLabel45.setPreferredSize(new java.awt.Dimension(48, 14));

        jLabel46.setText("Term Test 02 Average");

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(204, 0, 0));
        jLabel47.setPreferredSize(new java.awt.Dimension(48, 14));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(204, 0, 0));
        jLabel49.setPreferredSize(new java.awt.Dimension(48, 14));

        jLabel50.setText("Term Test 03 Average");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel33)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel38))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel34)
                                        .addComponent(jLabel44))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel39))))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel32)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel37))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(jLabel50)))
                .addGap(46, 46, 46)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(jLabel42)
                            .addComponent(jLabel36)
                            .addComponent(jLabel46))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(jLabel41)
                            .addComponent(jLabel43)
                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel37)
                    .addComponent(jLabel35)
                    .addComponent(jLabel40))
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel38)
                    .addComponent(jLabel36)
                    .addComponent(jLabel41))
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel39)
                    .addComponent(jLabel42)
                    .addComponent(jLabel43))
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel44)
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel46)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel50, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel49, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(162, 162, 162)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        
             

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jButton2.setEnabled(true);
         if(jComboBox1.getSelectedItem()=="please select" || jComboBox2.getSelectedItem()=="please select") {
           JOptionPane.showMessageDialog(null, "please enter or select correct values");
       }

         else {
        
        try {
            
             Connection conn = db.connect();
               Statement s = conn.createStatement();
             
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowcount FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int count = rs.getInt("rowcount");
            rs.close();
             String count1 = String.valueOf(count);
             jLabel21.setText(count1);
             
           // -------------------------------- 01 -------------------------------------- 
             // 1st assess. ------
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowcount1 FROM student_all WHERE st_as_marks1>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); // AND st_as_marks1 > 0'");
            rs.next();
            int count2 = rs.getInt("rowcount1");
            rs.close();
            String count3 = String.valueOf(count2);
 
             // ------
             
            // 1st assess. ------
            rs = s.executeQuery("SELECT SUM(st_as_marks1) AS rowsum1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); // AND st_as_marks1 > 0'");
            rs.next();
            int sum1 = rs.getInt("rowsum1");
            rs.close();
            String sum2 = String.valueOf(sum1);
            jLabel20.setText(sum2);
             // ------ 
             
             if(count2 == 0) {
             jLabel37.setText("not yet");
             
             // ------------------------------------------------------------------------------------
             rs = s.executeQuery("SELECT COUNT(st_fullname) AS a FROM student_all WHERE st_as_marks2>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int b = rs.getInt("a");
            rs.close();
            String c = String.valueOf(b);
           
            
            rs = s.executeQuery("SELECT SUM(st_as_marks2) AS rsum1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int b1 = rs.getInt("rsum1");
            rs.close();
            String c1 = String.valueOf(b1);
            jLabel19.setText(c1);
             
            if(b == 0) {
             jLabel38.setText("not yet"); 
             // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
             rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows FROM student_all WHERE st_as_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu = rs.getInt("rows");
            rs.close();
            String students = String.valueOf(stu);


            rs = s.executeQuery("SELECT SUM(st_as_marks3) AS totals FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots = rs.getInt("totals");
            rs.close();
            String newtots = String.valueOf(tots);
            jLabel18.setText(newtots);
             
            if(stu == 0) {
             jLabel39.setText("not yet"); 
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows1 FROM student_all WHERE st_as_marks4>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu1 = rs.getInt("rows1");
            rs.close();
            String students1 = String.valueOf(stu1);


            rs = s.executeQuery("SELECT SUM(st_as_marks4) AS totals1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots1 = rs.getInt("totals1");
            rs.close();
            String newtots1 = String.valueOf(tots1);
            jLabel17.setText(newtots1);
             
            if(stu1 == 0) {
             jLabel40.setText("not yet");  
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText("not yet");
             
             
             jLabel13.setText("not yet");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(0,"","Ass.1");
             dataset.setValue(0,"","Ass.2");
             dataset.setValue(0,"","Ass.3");
             dataset.setValue(0,"","Ass.4");
             dataset.setValue(0,"","Ass.5");
             dataset.setValue(0,"","Ass.6");
             
             JFreeChart chart = ChartFactory.createBarChart("Class Records (not held on yet)","Assess. number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = average3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
           
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = average2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
             dataset.setValue(average2,"","As.5");
    

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = ( average2 + average3 )/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
             } 
            
            else {
             int average1 = tots1/stu1 ;
             String averages1 = String.valueOf(average1);
             jLabel40.setText(averages1 + " %");
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = average1;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    
             dataset.setValue(average1,"","As.4");
      

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average3)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
         
             dataset.setValue(average1,"","As.4");
    
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = ( average1 + average2 )/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
       
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
          

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average2 + average3)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
          
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
            }
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
             } 
            
            else {
             int average = tots/stu ;
             String averages = String.valueOf(average);
             jLabel39.setText(averages + " %");
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows1 FROM student_all WHERE st_as_marks4>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu1 = rs.getInt("rows1");
            rs.close();
            String students1 = String.valueOf(stu1);


            rs = s.executeQuery("SELECT SUM(st_as_marks4) AS totals1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots1 = rs.getInt("totals1");
            rs.close();
            String newtots1 = String.valueOf(tots1);
            jLabel17.setText(newtots1);
             
            if(stu1 == 0) {
             jLabel40.setText("not yet"); 
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = average;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
      
             dataset.setValue(average,"","As.3");
          

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average3)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
           
             dataset.setValue(average,"","As.3");
        
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average2)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
             dataset.setValue(average,"","As.3");
            
             dataset.setValue(average2,"","As.5");
          

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average2 + average3 )/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
           
             dataset.setValue(average,"","As.3");
        
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
             } 
            
            else {
             int average1 = tots1/stu1 ;
             String averages1 = String.valueOf(average1);
             jLabel40.setText(averages1 + " %");
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
        

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average3)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
          
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
           
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average2 )/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
       
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
           

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average2 + average3)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
          
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
            }
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            }
             // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
             }
             
            else {
             int avg11 = b1/b ;
             String avg22 = String.valueOf(avg11);
             jLabel38.setText(avg22 + " %");
             // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
             rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows FROM student_all WHERE st_as_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu = rs.getInt("rows");
            rs.close();
            String students = String.valueOf(stu);


            rs = s.executeQuery("SELECT SUM(st_as_marks3) AS totals FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots = rs.getInt("totals");
            rs.close();
            String newtots = String.valueOf(tots);
            jLabel18.setText(newtots);
             
            if(stu == 0) {
             jLabel39.setText("not yet"); 
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows1 FROM student_all WHERE st_as_marks4>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu1 = rs.getInt("rows1");
            rs.close();
            String students1 = String.valueOf(stu1);


            rs = s.executeQuery("SELECT SUM(st_as_marks4) AS totals1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots1 = rs.getInt("totals1");
            rs.close();
            String newtots1 = String.valueOf(tots1);
            jLabel17.setText(newtots1);
             
            if(stu1 == 0) {
             jLabel40.setText("not yet"); 
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (avg11)/1;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
     
             dataset.setValue(avg11,"","As.2");
    

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average3 + avg11)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
          
             dataset.setValue(avg11,"","As.2");
            
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average2 +  avg11)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
          
             dataset.setValue(avg11,"","As.2");
             
             dataset.setValue(average2,"","As.5");
        

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = ( average2 + average3 + avg11)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
             dataset.setValue(avg11,"","As.2");
          
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
             } 
            
            else {
             int average1 = tots1/stu1 ;
             String averages1 = String.valueOf(average1);
             jLabel40.setText(averages1 + " %");
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + avg11)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    
             dataset.setValue(avg11,"","As.2");
         
             dataset.setValue(average1,"","As.4");
         

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average3 + avg11)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
             dataset.setValue(avg11,"","As.2");
        
             dataset.setValue(average1,"","As.4");
       
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average2 + avg11)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
          
             dataset.setValue(avg11,"","As.2");
           
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
            

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average2 + average3 + avg11)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
           
             dataset.setValue(avg11,"","As.2");
           
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
            }
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
             } 
            
            else {
             int average = tots/stu ;
             String averages = String.valueOf(average);
             jLabel39.setText(averages + " %");
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows1 FROM student_all WHERE st_as_marks4>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu1 = rs.getInt("rows1");
            rs.close();
            String students1 = String.valueOf(stu1);


            rs = s.executeQuery("SELECT SUM(st_as_marks4) AS totals1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots1 = rs.getInt("totals1");
            rs.close();
            String newtots1 = String.valueOf(tots1);
            jLabel17.setText(newtots1);
             
            if(stu1 == 0) {
             jLabel40.setText("not yet"); 
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + avg11)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
         
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
    

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average3 + avg11)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
          
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
       
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average2 + avg11)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
           
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
            
             dataset.setValue(average2,"","As.5");
         

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average2 + average3 +  avg11)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
         
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
        
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
             } 
            
            else {
             int average1 = tots1/stu1 ;
             String averages1 = String.valueOf(average1);
             jLabel40.setText(averages1 + " %");
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + avg11)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
         
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
        

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average3 + avg11)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
          
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
          
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average2 + avg11)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
         
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
            

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average2 + average3 + avg11)/5;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
     
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
            }
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            }
             // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
            }
             
             // ------------------------------------------------------------------------------------
             
             }
             
             else {
             int avg1 = sum1/count2 ;
             String avg2 = String.valueOf(avg1);
             jLabel37.setText(avg2 + " %");
             rs = s.executeQuery("SELECT COUNT(st_fullname) AS a FROM student_all WHERE st_as_marks2>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int b = rs.getInt("a");
            rs.close();
            String c = String.valueOf(b);
           
            
            rs = s.executeQuery("SELECT SUM(st_as_marks2) AS rsum1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int b1 = rs.getInt("rsum1");
            rs.close();
            String c1 = String.valueOf(b1);
            jLabel19.setText(c1);
             
            if(b == 0) {
             jLabel38.setText("not yet"); 
             // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
             rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows FROM student_all WHERE st_as_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu = rs.getInt("rows");
            rs.close();
            String students = String.valueOf(stu);


            rs = s.executeQuery("SELECT SUM(st_as_marks3) AS totals FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots = rs.getInt("totals");
            rs.close();
            String newtots = String.valueOf(tots);
            jLabel18.setText(newtots);
             
            if(stu == 0) {
             jLabel39.setText("not yet");    
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows1 FROM student_all WHERE st_as_marks4>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu1 = rs.getInt("rows1");
            rs.close();
            String students1 = String.valueOf(stu1);


            rs = s.executeQuery("SELECT SUM(st_as_marks4) AS totals1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots1 = rs.getInt("totals1");
            rs.close();
            String newtots1 = String.valueOf(tots1);
            jLabel17.setText(newtots1);
             
            if(stu1 == 0) {
             jLabel40.setText("not yet"); 
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = avg1;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
         

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average3 + avg1)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
        
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average2 + avg1)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
   
             dataset.setValue(average2,"","As.5");
    

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average2 + average3 + avg1)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
      
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
             } 
            
            else {
             int average1 = tots1/stu1 ;
             String averages1 = String.valueOf(average1);
             jLabel40.setText(averages1 + " %");
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + avg1)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
    
             dataset.setValue(average1,"","As.4");
  

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average3 + avg1)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
         
             dataset.setValue(average1,"","As.4");
        
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average2 + avg1)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
        
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
          

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average2 + average3 + avg1)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             

             // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
          
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
                          
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
            }
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
             } 
            
            else {
             int average = tots/stu ;
             String averages = String.valueOf(average);
             jLabel39.setText(averages + " %");
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows1 FROM student_all WHERE st_as_marks4>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu1 = rs.getInt("rows1");
            rs.close();
            String students1 = String.valueOf(stu1);


            rs = s.executeQuery("SELECT SUM(st_as_marks4) AS totals1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots1 = rs.getInt("totals1");
            rs.close();
            String newtots1 = String.valueOf(tots1);
            jLabel17.setText(newtots1);
             
            if(stu1 == 0) {
             jLabel40.setText("not yet"); 
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + avg1)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
      
             dataset.setValue(average,"","As.3");
         

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average3 + avg1)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
          
             dataset.setValue(average,"","As.3");
        
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average2 + avg1)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
           
             dataset.setValue(average,"","As.3");
        
             dataset.setValue(average2,"","As.5");
           

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average2 + average3 + avg1)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
          
             dataset.setValue(average,"","As.3");
       
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
             } 
            
            else {
             int average1 = tots1/stu1 ;
             String averages1 = String.valueOf(average1);
             jLabel40.setText(averages1 + " %");
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + avg1)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
        
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
         

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average3 + avg1)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
   
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
          
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average2 + avg1)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
           
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
           

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average2 + average3 + avg1)/5;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
           
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
            }
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            }
             // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
             }
             
            else {
             int avg11 = b1/b ;
             String avg22 = String.valueOf(avg11);
             jLabel38.setText(avg22 + " %");
             // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
             rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows FROM student_all WHERE st_as_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu = rs.getInt("rows");
            rs.close();
            String students = String.valueOf(stu);


            rs = s.executeQuery("SELECT SUM(st_as_marks3) AS totals FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots = rs.getInt("totals");
            rs.close();
            String newtots = String.valueOf(tots);
            jLabel18.setText(newtots);
             
            if(stu == 0) {
             jLabel39.setText("not yet");  
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows1 FROM student_all WHERE st_as_marks4>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu1 = rs.getInt("rows1");
            rs.close();
            String students1 = String.valueOf(stu1);


            rs = s.executeQuery("SELECT SUM(st_as_marks4) AS totals1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots1 = rs.getInt("totals1");
            rs.close();
            String newtots1 = String.valueOf(tots1);
            jLabel17.setText(newtots1);
             
            if(stu1 == 0) {
             jLabel40.setText("not yet"); 
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (avg1 + avg11)/2;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
            

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average3 + avg1 + avg11)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
          
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average2 + avg1 + avg11)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
 
             dataset.setValue(average2,"","As.5");
         

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average2 + average3 + avg1 + avg11)/6;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
      
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
             } 
            
            else {
             int average1 = tots1/stu1 ;
             String averages1 = String.valueOf(average1);
             jLabel40.setText(averages1 + " %");
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + avg1 + avg11)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
       
             dataset.setValue(average1,"","As.4");
           

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average3 + avg1 + avg11)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
            
             dataset.setValue(average1,"","As.4");
          
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average2 + avg1 + avg11)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
           
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
           

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average1 + average2 + average3 + avg1 + avg11)/5;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
        
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
            }
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
             } 
            
            else {
             int average = tots/stu ;
             String averages = String.valueOf(average);
             jLabel39.setText(averages + " %");
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows1 FROM student_all WHERE st_as_marks4>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu1 = rs.getInt("rows1");
            rs.close();
            String students1 = String.valueOf(stu1);


            rs = s.executeQuery("SELECT SUM(st_as_marks4) AS totals1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots1 = rs.getInt("totals1");
            rs.close();
            String newtots1 = String.valueOf(tots1);
            jLabel17.setText(newtots1);
             
            if(stu1 == 0) {
             jLabel40.setText("not yet"); 
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + avg1 + avg11)/3;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
      

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average3 + avg1 + avg11)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
       
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average2 + avg1 + avg11)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
          
             dataset.setValue(average2,"","As.5");
     

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average2 + average3 + avg1 + avg11)/5;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
      
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
             } 
            
            else {
             int average1 = tots1/stu1 ;
             String averages1 = String.valueOf(average1);
             jLabel40.setText(averages1 + " %");
             // 4444444444444444444444444444444444444444444444444444444444444444444
                          
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows2 FROM student_all WHERE st_as_marks5>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu2 = rs.getInt("rows2");
            rs.close();
            String students2 = String.valueOf(stu2);


            rs = s.executeQuery("SELECT SUM(st_as_marks5) AS totals2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots2 = rs.getInt("totals2");
            rs.close();
            String newtots2 = String.valueOf(tots2);
            jLabel16.setText(newtots2);
             
            if(stu2 == 0) {
             jLabel41.setText("not yet"); 
             // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + avg1 + avg11)/4;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
       

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average3 + avg1 + avg11)/5;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
          
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
             } 
            
            else {
             int average2 = tots2/stu2 ;
             String averages2 = String.valueOf(average2);
             jLabel41.setText(averages2 + " %");
              // 555555555555555555555555555555555555555555555555555555555555555555555555
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rows3 FROM student_all WHERE st_as_marks6>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stu3 = rs.getInt("rows3");
            rs.close();
            String students3 = String.valueOf(stu3);


            rs = s.executeQuery("SELECT SUM(st_as_marks6) AS totals3 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int tots3 = rs.getInt("totals3");
            rs.close();
            String newtots3 = String.valueOf(tots3);
            jLabel15.setText(newtots3);
             
            if(stu3 == 0) {
             jLabel43.setText("not yet"); 
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average2 + avg1 + avg11)/5;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
      

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
             } 
            
            else {
             int average3 = tots3/stu3 ;
             String averages3 = String.valueOf(average3);
             jLabel43.setText(averages3 + " %");
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
              int all_tots = sum1 + b1 + tots1 + tots2 + tots3 + tots ;
             String all_to = String.valueOf(all_tots);
             jLabel14.setText(all_to);
             
             int all_avg = (average + average1 + average2 + average3 + avg1 + avg11)/6;
             String all_av = String.valueOf(all_avg);
             jLabel13.setText(all_av + " %");
             
             // ################################################################################
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
             dataset.setValue(avg1,"","As.1");
             dataset.setValue(avg11,"","As.2");
             dataset.setValue(average,"","As.3");
             dataset.setValue(average1,"","As.4");
             dataset.setValue(average2,"","As.5");
             dataset.setValue(average3,"","As.6");

             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Assess. Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
             
             
             // 6666666666666666666666666666666666666666666666666666666666666666666666666
            }
             // 555555555555555555555555555555555555555555555555555555555555555555555555
            
            }
             // 4444444444444444444444444444444444444444444444444444444444444444444
            }
             // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            }
             // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
            }
             
             // 1st assess. sum 
             }
             
           // semester details ---------------------------------
           
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss FROM student_all WHERE st_se_marks1>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus = rs.getInt("rowss");
            rs.close();
            String studentss = String.valueOf(stus);
    

            rs = s.executeQuery("SELECT SUM(st_se_marks1) AS totalss FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss = rs.getInt("totalss");
            rs.close();
            String newtotss = String.valueOf(totss);
            jLabel31.setText(newtotss);
             
            if(stus == 0) {
              jLabel45.setText("not yet"); 
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss1 FROM student_all WHERE st_se_marks2>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus1 = rs.getInt("rowss1");
            rs.close();
            String studentss1 = String.valueOf(stus1);
       

            rs = s.executeQuery("SELECT SUM(st_se_marks2) AS totalss1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss1 = rs.getInt("totalss1");
            rs.close();
            String newtotss1 = String.valueOf(totss1);
            jLabel30.setText(newtotss1);
             
            if(stus1 == 0) {
              jLabel47.setText("not yet"); 
              // kkkkkkkkkk
               rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss2 FROM student_all WHERE st_se_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus2 = rs.getInt("rowss2");
            rs.close();
            String studentss2 = String.valueOf(stus2);
            System.out.println(studentss2);

            rs = s.executeQuery("SELECT SUM(st_se_marks3) AS totalss2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss2 = rs.getInt("totalss2");
            rs.close();
            String newtotss2 = String.valueOf(totss2);
            jLabel29.setText(newtotss2);
             
            if(stus2 == 0) {
              jLabel49.setText("not yet");
              // ggggggggg
               int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText("not yet");
             
             jLabel27.setText("not yet");
             
              // ggggggggg
            }  
            
            else {
             int avs2 = totss2/stus2 ;
             String aves2 = String.valueOf(avs2);
             jLabel49.setText(aves2 + " %");
             // gggggggggg
              int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = avs2;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
             // gggggggggg
            }
              // kkkkkkkkkk
              
            }  
            
            else {
             int avs1 = totss1/stus1 ;
             String aves1 = String.valueOf(avs1);
             jLabel47.setText(aves1 + " %");
             // kkkkkkkk
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss2 FROM student_all WHERE st_se_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus2 = rs.getInt("rowss2");
            rs.close();
            String studentss2 = String.valueOf(stus2);
            System.out.println(studentss2);

            rs = s.executeQuery("SELECT SUM(st_se_marks3) AS totalss2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss2 = rs.getInt("totalss2");
            rs.close();
            String newtotss2 = String.valueOf(totss2);
            jLabel29.setText(newtotss2);
             
            if(stus2 == 0) {
              jLabel49.setText("not yet");
              // ggggggggg
               int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = avs1;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
              // ggggggggg
            }  
            
            else {
             int avs2 = totss2/stus2 ;
             String aves2 = String.valueOf(avs2);
             jLabel49.setText(aves2 + " %");
             // gggggggggg
              int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = ( avs1 + avs2 )/2;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
             // gggggggggg
            }
             // kkkkkkkk
            }
              
            } 
            
            else { 
            int avs = totss/stus ;
             String aves = String.valueOf(avs);
             jLabel45.setText(aves + " %");
             rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss1 FROM student_all WHERE st_se_marks2>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus1 = rs.getInt("rowss1");
            rs.close();
            String studentss1 = String.valueOf(stus1);
       

            rs = s.executeQuery("SELECT SUM(st_se_marks2) AS totalss1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss1 = rs.getInt("totalss1");
            rs.close();
            String newtotss1 = String.valueOf(totss1);
            jLabel30.setText(newtotss1);
             
            if(stus1 == 0) {
              jLabel47.setText("not yet"); 
              // kkkkkkkkkk
               rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss2 FROM student_all WHERE st_se_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus2 = rs.getInt("rowss2");
            rs.close();
            String studentss2 = String.valueOf(stus2);
            System.out.println(studentss2);

            rs = s.executeQuery("SELECT SUM(st_se_marks3) AS totalss2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss2 = rs.getInt("totalss2");
            rs.close();
            String newtotss2 = String.valueOf(totss2);
            jLabel29.setText(newtotss2);
             
            if(stus2 == 0) {
              jLabel49.setText("not yet");
              // ggggggggg
               int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = avs;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
              // ggggggggg
            }  
            
            else {
             int avs2 = totss2/stus2 ;
             String aves2 = String.valueOf(avs2);
             jLabel49.setText(aves2 + " %");
             // gggggggggg
              int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = (avs + avs2 )/2;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
             // gggggggggg
            }
              // kkkkkkkkkk
              
            }  
            
            else {
             int avs1 = totss1/stus1 ;
             String aves1 = String.valueOf(avs1);
             jLabel47.setText(aves1 + " %");
             // kkkkkkkk
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss2 FROM student_all WHERE st_se_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus2 = rs.getInt("rowss2");
            rs.close();
            String studentss2 = String.valueOf(stus2);
            System.out.println(studentss2);

            rs = s.executeQuery("SELECT SUM(st_se_marks3) AS totalss2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss2 = rs.getInt("totalss2");
            rs.close();
            String newtotss2 = String.valueOf(totss2);
            jLabel29.setText(newtotss2);
             
            if(stus2 == 0) {
              jLabel49.setText("not yet");
              // ggggggggg
               int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = (avs + avs1 )/2;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
              // ggggggggg
            }  
            
            else {
             int avs2 = totss2/stus2 ;
             String aves2 = String.valueOf(avs2);
             jLabel49.setText(aves2 + " %");
             // gggggggggg
              int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = (avs + avs1 + avs2 )/3;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
             // gggggggggg
            }
             // kkkkkkkk
            }
            }
             // --------------------------------end 01 --------------------------------------

             // -------------------------------- se 02 -------------------------------------- 
            
             // --------------------------------end 02 --------------------------------------

           
             // -------------------------------- se 03 -------------------------------------- 
             
            
             // --------------------------------end 03 --------------------------------------

//             int alls = (all_avgs + all_avg )/2;
//             String alls1 = String.valueOf(alls);
//             jLabel51.setText(alls1 + " %");
//             
//             
//             // ---- charts ----
//             
//             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//             dataset.setValue(avg1,"","As.1");
//             dataset.setValue(avg11,"","As.2");
//             dataset.setValue(average,"","As.3");
//             dataset.setValue(average1,"","As.4");
//             dataset.setValue(average2,"","As.5");
//             dataset.setValue(average3,"","As.6");
//             dataset.setValue(avs,"","Se.1");
//             dataset.setValue(avs1,"","Se.2");
//             dataset.setValue(avs2,"","Se.3");
//             
//             JFreeChart chart = ChartFactory.createBarChart("Class Records","Exam Name","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
//             CategoryPlot catPlot = chart.getCategoryPlot();
//             catPlot.setRangeGridlinePaint(Color.BLACK);
//             
//             ChartPanel chartPanel = new ChartPanel(chart);
//             jPanel7.removeAll();
//             jPanel7.add(chartPanel,BorderLayout.CENTER);
//             jPanel7.validate();
//             
//             // ---- end charts ----
//             
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
        }        
         }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         
         if(jComboBox1.getSelectedItem()=="please select" || jComboBox2.getSelectedItem()=="please select") {
           JOptionPane.showMessageDialog(null, "please enter or select correct values");
       }

         else {
        
        try {
            
             Connection conn = db.connect();
               Statement s = conn.createStatement();
             
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowcount FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int count = rs.getInt("rowcount");
            rs.close();
             String count1 = String.valueOf(count);
             jLabel21.setText(count1);
             
             
              // semester details ---------------------------------
           
            rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss FROM student_all WHERE st_se_marks1>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus = rs.getInt("rowss");
            rs.close();
            String studentss = String.valueOf(stus);
    

            rs = s.executeQuery("SELECT SUM(st_se_marks1) AS totalss FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss = rs.getInt("totalss");
            rs.close();
            String newtotss = String.valueOf(totss);
            jLabel31.setText(newtotss);
             
            if(stus == 0) {
              jLabel45.setText("not yet"); 
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss1 FROM student_all WHERE st_se_marks2>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus1 = rs.getInt("rowss1");
            rs.close();
            String studentss1 = String.valueOf(stus1);
       

            rs = s.executeQuery("SELECT SUM(st_se_marks2) AS totalss1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss1 = rs.getInt("totalss1");
            rs.close();
            String newtotss1 = String.valueOf(totss1);
            jLabel30.setText(newtotss1);
             
            if(stus1 == 0) {
              jLabel47.setText("not yet"); 
              // kkkkkkkkkk
               rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss2 FROM student_all WHERE st_se_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus2 = rs.getInt("rowss2");
            rs.close();
            String studentss2 = String.valueOf(stus2);
            System.out.println(studentss2);

            rs = s.executeQuery("SELECT SUM(st_se_marks3) AS totalss2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss2 = rs.getInt("totalss2");
            rs.close();
            String newtotss2 = String.valueOf(totss2);
            jLabel29.setText(newtotss2);
             
            if(stus2 == 0) {
              jLabel49.setText("not yet");
              // ggggggggg
               int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText("not yet");
             
             jLabel27.setText("not yet");
             
              // ggggggggg
                           // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
     
             dataset.setValue(0,"","Semester.1");
             dataset.setValue(0,"","Semester.2");
             dataset.setValue(0,"","Semester.3");
             
             JFreeChart chart = ChartFactory.createBarChart("Class Records (not held yet)","Semester Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
            }  
            
            else {
             int avs2 = totss2/stus2 ;
             String aves2 = String.valueOf(avs2);
             jLabel49.setText(aves2 + " %");
             // gggggggggg
              int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = avs2;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
             // gggggggggg
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
     
       
             dataset.setValue(avs2,"","Se.3");
             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Semester Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
            }
              // kkkkkkkkkk
              
            }  
            
            else {
             int avs1 = totss1/stus1 ;
             String aves1 = String.valueOf(avs1);
             jLabel47.setText(aves1 + " %");
             // kkkkkkkk
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss2 FROM student_all WHERE st_se_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus2 = rs.getInt("rowss2");
            rs.close();
            String studentss2 = String.valueOf(stus2);
            System.out.println(studentss2);

            rs = s.executeQuery("SELECT SUM(st_se_marks3) AS totalss2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss2 = rs.getInt("totalss2");
            rs.close();
            String newtotss2 = String.valueOf(totss2);
            jLabel29.setText(newtotss2);
             
            if(stus2 == 0) {
              jLabel49.setText("not yet");
              // ggggggggg
               int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = avs1;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
              // ggggggggg
                           // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
     
    
             dataset.setValue(avs1,"","Se.2");
       
             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Semester Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
            }  
            
            else {
             int avs2 = totss2/stus2 ;
             String aves2 = String.valueOf(avs2);
             jLabel49.setText(aves2 + " %");
             // gggggggggg
              int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = ( avs1 + avs2 )/2;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
             // gggggggggg
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
     
          
             dataset.setValue(avs1,"","Se.2");
             dataset.setValue(avs2,"","Se.3");
             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Semester Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
            }
             // kkkkkkkk
            }
              
            } 
            
            else { 
            int avs = totss/stus ;
             String aves = String.valueOf(avs);
             jLabel45.setText(aves + " %");
             rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss1 FROM student_all WHERE st_se_marks2>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus1 = rs.getInt("rowss1");
            rs.close();
            String studentss1 = String.valueOf(stus1);
       

            rs = s.executeQuery("SELECT SUM(st_se_marks2) AS totalss1 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss1 = rs.getInt("totalss1");
            rs.close();
            String newtotss1 = String.valueOf(totss1);
            jLabel30.setText(newtotss1);
             
            if(stus1 == 0) {
              jLabel47.setText("not yet"); 
              // kkkkkkkkkk
               rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss2 FROM student_all WHERE st_se_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus2 = rs.getInt("rowss2");
            rs.close();
            String studentss2 = String.valueOf(stus2);
            System.out.println(studentss2);

            rs = s.executeQuery("SELECT SUM(st_se_marks3) AS totalss2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss2 = rs.getInt("totalss2");
            rs.close();
            String newtotss2 = String.valueOf(totss2);
            jLabel29.setText(newtotss2);
             
            if(stus2 == 0) {
              jLabel49.setText("not yet");
              // ggggggggg
               int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = avs;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
              // ggggggggg
                           // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
     
             dataset.setValue(avs,"","Se.1");
        
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Semester Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
            }  
            
            else {
             int avs2 = totss2/stus2 ;
             String aves2 = String.valueOf(avs2);
             jLabel49.setText(aves2 + " %");
             // gggggggggg
              int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = (avs + avs2 )/2;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
             // gggggggggg
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
     
             dataset.setValue(avs,"","Se.1");
      
             dataset.setValue(avs2,"","Se.3");
             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Semester Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
            }
              // kkkkkkkkkk
              
            }  
            
            else {
             int avs1 = totss1/stus1 ;
             String aves1 = String.valueOf(avs1);
             jLabel47.setText(aves1 + " %");
             // kkkkkkkk
              rs = s.executeQuery("SELECT COUNT(st_fullname) AS rowss2 FROM student_all WHERE st_se_marks3>0 AND st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'"); 
            rs.next();
            int stus2 = rs.getInt("rowss2");
            rs.close();
            String studentss2 = String.valueOf(stus2);
            System.out.println(studentss2);

            rs = s.executeQuery("SELECT SUM(st_se_marks3) AS totalss2 FROM student_all WHERE st_grade='" + jComboBox1.getSelectedItem() + "' AND st_class='" + jComboBox2.getSelectedItem() + "'");
            rs.next();
            int totss2 = rs.getInt("totalss2");
            rs.close();
            String newtotss2 = String.valueOf(totss2);
            jLabel29.setText(newtotss2);
             
            if(stus2 == 0) {
              jLabel49.setText("not yet");
              // ggggggggg
               int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = (avs + avs1 )/2;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
              // ggggggggg
                           // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
     
             dataset.setValue(avs,"","Se.1");
             dataset.setValue(avs1,"","Se.2");
      
             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Semester Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
            }  
            
            else {
             int avs2 = totss2/stus2 ;
             String aves2 = String.valueOf(avs2);
             jLabel49.setText(aves2 + " %");
             // gggggggggg
              int all_totss = totss1 + totss2 + totss ;
             String alls_to = String.valueOf(all_totss);
             jLabel28.setText(alls_to);
             
             int all_avgs = (avs + avs1 + avs2 )/3;
             String alls_av = String.valueOf(all_avgs);
             jLabel27.setText(alls_av + " %");
             
             // gggggggggg
                          // ---- charts ----
             
             DefaultCategoryDataset dataset = new DefaultCategoryDataset();
     
             dataset.setValue(avs,"","Se.1");
             dataset.setValue(avs1,"","Se.2");
             dataset.setValue(avs2,"","Se.3");
             
             JFreeChart chart = ChartFactory.createBarChart("Class Records","Semester Number","Marks Average (%)", dataset,PlotOrientation.VERTICAL, false,false,false);
             CategoryPlot catPlot = chart.getCategoryPlot();
             catPlot.setRangeGridlinePaint(Color.BLACK);
             
             ChartPanel chartPanel = new ChartPanel(chart);
             jPanel7.removeAll();
             jPanel7.add(chartPanel,BorderLayout.CENTER);
             jPanel7.validate();
             
             // ---- end charts ----
            }
             // kkkkkkkk
            }
            }
             
              } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
        }        
         }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
       
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jComboBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    // End of variables declaration//GEN-END:variables
}
